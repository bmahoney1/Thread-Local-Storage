	For this assignemnt we had to make a thread local storage. We do this so that threads are able to have there own memory in the heap that can't be accessed by other threads.
	One function I had to make was tls_create. In this function I would first see if I could find an element already in the table for that thread, which would then result in a return -1. I then would go and create the element, making sure the correct number of pages and memory for the pages were put into the element characteristics. I would then make sure it is added to the hash table.
	In tls_destroy I made sure that there was a tls for that thread. If there was, I would then go and free all of the memory from it and then remove it from the hash table.
	In tls_write, I wold firsy verify that a tls for the thread existed. if it did and the length was valid, I would unprotect the pages so that they could get written to and then wrote to the page byte by byte. I there were more than 1 pointer to the page however I then made it so that it would copy on write so that it would not change the data for every thread pointing to it. I did this by creating a copy page and then copying the data in the memory over it it using memcpy.
	In tls_read, I would once again check to make sure there was a tls for the thread. If there was I would then unprotect the page so I could read from it and then find which page and where on that page to read from and then read from it byte by byte storing it in the buffer. I then protected the pages after.
	In tls_clone I would firsy make sure the clone element did not have a tls already and that the already existing element already had a tls. If that was the case I then copied the data over to the clone element and made sure the page pointers were pointing to the same pages. I then made sure to add the clone element to the hash table.

	Issues:
	One issue I ran into was finding the correct element associated with the tid. After setting up the hash table however, I was then able to just find the index and then traverse through the linked list for that index to try to match the TID's.
	Another issue I ran into was the clone. I was having issues making the pointers for both elements point to the same pages.
	Another issue I ran into was properly destroying the element to make sure that not only was the memory freed but also that it was properly removed from the hash table, maintaining the linked list structure.
